策略模式：定义一组算法，将每个封装为一个类，并且使得她们可以互相替换。
该模式使得算法可以独立于实现它的客户变动

关键点时运用对"supertype"的多态性编程,实现运行时的对象可以动态变化，而不是被编码所固定。
这样可以不承担继承附带的包袱而享受复用的的好处

1.针对接口编程，而不是针对是实现编程
2.优先考虑使用对象组合，而不是类继承
3.分离变化,进行封装